The text test of BaseGeometry
-------------------------------

Using ''BaseGeometry''

===============================

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

--------------

Object Created

--------------

>>> bg = BaseGeometry()




==============
Typical Test |
==============

>>> bg.integer_validator('john', 11)

>>> bg.integer_validator('square', 25)

>>> bg.integer_validator('size', 10000000000000)

>>> bg.integer_validator('checkerIsAlwaysRight', True)

>>> bg.integer_validator("age", True)


===============
   Error Type |
===============

>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> bg.integer_validator(23, 'size')
Traceback (most recent call last):
...
TypeError: 23 must be an integer

>>> bg.integer_validator(23, 'size', 12)
Traceback (most recent call last):
...
TypeError: integer_validator() takes 3 positional arguments but 4 were given

>>> bg.integer_validator('size', 1, 12)
Traceback (most recent call last):
...
TypeError: integer_validator() takes 3 positional arguments but 4 were given

>>> bg.integer_validator('size', -1)
Traceback (most recent call last):
...
ValueError: size must be greater than 0

>>> bg.integer_validator('size', 'height')
Traceback (most recent call last):
...
TypeError: size must be an integer

>>> bg.integer_validator('john', 0)
Traceback (most recent call last):
...
ValueError: john must be greater than 0

>>> bg.integer_validator('john', (2,))
Traceback (most recent call last):
...
TypeError: john must be an integer

>>> bg.integer_validator('checkerIsAlwaysRight', [2])
Traceback (most recent call last):
...
TypeError: checkerIsAlwaysRight must be an integer

>>> bg.integer_validator('checkerIsAlwaysRight', None)
Traceback (most recent call last):
...
TypeError: checkerIsAlwaysRight must be an integer

>>> bg.integer_validator("age", False)
Traceback (most recent call last):
...
ValueError: age must be greater than 0
